name: Test
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 1 * * 1-5'
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Replace secrets on the project.
      - name: Replace Cypress Dashboard API Key secret on the package.json
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '{CYPRESS_DASHBOARD_APIKEY}'
          replace: ${{ secrets.CYPRESS_DASHBOARD_APIKEY }}

      - name: Replace Qase API Token secret on the package.json
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '{QASE_API_TOKEN}'
          replace: ${{ secrets.QASE_API_TOKEN }}

      # Clean node modules
      - name: Clean node modules
        run: npm cache clean --force

      # Install NPM dependencies, cache them correctly
      - name: Install dependencies
        run: npm install --force

      # Verify Cypress binary
      - name: Verify Cypress
        run: npm run verify

      # Run all Cypress tests
      - name: Run the tests
        run: npm run test

      # Upload artifacts with the tests results
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: report
          path: report

      # Create mochawesome report and json to get the results
      - name: Merge mochawesome report
        if: always()
        run: npm run merge_reports

      - name: Generate mochawesome report.
        if: always()
        run: npm run generate_mochawesome_report

      # Display the results:
      - name: Display results
        if: always()
        run: chmod +x script/results.sh
      - id: vars
        if: always()
        run: echo ::set-output name=testResult::$(./script/results.sh)

      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mochawesome
          path: mochawesome-report

      # Publish Test Results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report/*.xml

      # Analyze the project with Sonar.
      # The result will be displayed in: https://sonarcloud.io/dashboard?id=estefafdez_cypress-template
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Slack Notify
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.2.1
        if: always()
        env:
          SLACK_CHANNEL: travis-ci
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://github.com/estefafdez/cypress-template/blob/main/script/github.png
          SLACK_USERNAME: 'Github Actions'
          SLACK_FOOTER: 'Github project: https://github.com/estefafdez/cypress-template'
          SLACK_TITLE: 'Test Suite Results:'
          SLACK_MESSAGE: ${{ steps.vars.outputs.testResult }}
